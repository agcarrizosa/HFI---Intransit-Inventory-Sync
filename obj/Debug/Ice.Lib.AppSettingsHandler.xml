<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ice.Lib.AppSettingsHandler</name>
    </assembly>
    <members>
        <member name="T:Ice.Lib.AppSettingsHandler">
            <summary>
            A class that holds all the application settings.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.ConfigDocument">
            <summary>
            The Current Configuration File.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.ConfigPath">
            <summary>
            File path to current configuration file.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.IsShortcut">
            <summary>
            Gets whether the configuration file has Shortcut information.
            </summary>
            <value><b>true</b> if the configuration file has shortcut information.</value>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.AlternateCacheFolder">
            <summary>
            File path to the alternate Disk Cache Folder.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.AppServerUrl">
            <summary>
            Application Server URL.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.CultureCode">
            <summary>
            Current CultureCode.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.CustomResourceFile">
            <summary>
            File path to custom resource file.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.HelpAboutCopyrightText">
            <summary>
            File path to override Copyright text for the About screen.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.HelpAboutCopyrightURL">
            <summary>
            File path to override Copyright URL for the About screen.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.HelpAboutImage">
            <summary>
            File path to override background image for the About screen.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.HelpAboutProductText">
            <summary>
            File path to override Product name text for the About screen.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.HelpAboutTitleText">
            <summary>
            File path to override TitleBar text for the About screen.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.LastLoginID">
            <summary>
            Last login ID.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.LoginDefault">
            <summary>
            What should the User ID prompt on the login screen default to.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.ProductBrandIcon">
            <summary>
            Product branding Icon.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.ProductBrandText">
            <summary>
            Product branding text.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.ProductID">
            <summary>
            Product ID; for example Vantage, Vista, etc.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.ProductLogonImage">
            <summary>
            File path to override background image for the logon screen.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.ResourceFile">
            <summary>
            File path to resource file.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.SplashImage">
            <summary>
            File path for override splash image.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.ToolbarSettings">
            <summary>
            File path to ToolbarSettings XML.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.Version">
            <summary>
            Product version.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.ContextMenuNestingLevel">
            <summary>
            Context Menu Overflow value.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.ExtractStrings">
            <summary>
            Flag for extracting string text during a UI string parse.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.FormOpenMode">
            <summary>
            How should a form open: AutoSearch, AutoPopulate, or "" for default.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.RibbonView">
            <summary>
            Gets the Ribbon View flag.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.SelectTextOnEnter">
            <summary>
            Selects all text in a text-based control when the field
            gets focus (this behavior is forced when in handheld mode).
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.StartSystemMonitor">
            <summary>
            Should the system monitor be started when you login?
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.TreeExpandIndicatorThreshold">
            <summary>
            Gets the TreeView expansion indicator threshold.
            </summary>
            <value>The TreeView expansion indicator threshold.</value>
            <remarks>
            <para>If there are a large number of child tree nodes than it can take a significant amount of time to determine if each
            of the child nodes has children or not. This threshold value will determine at what child count checking will
            not be done. The checking is only done to put a "dummy" tree node under the child node so that there will be an
            expansion indicator or not on the child node. If there are more than the threshold value, all child nodes will
            have the dummy node under them.</para>
            <para>Defaults to 0 if the value is not numeric or less than zero. Zero implies that the old behavior of
            checking every node for children is used.</para>
            </remarks>
        </member>
        <member name="M:Ice.Lib.AppSettingsHandler.ClearCredentials">
            <summary>
            Clear the credentials from the .sysconfig file.
            </summary>
        </member>
        <member name="M:Ice.Lib.AppSettingsHandler.InitializeRememberCredentials">
            <summary>
            This is temporary and for backwards compatibility with previous versions. It should be removed post 3.2.600.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.DeploymentServerUri">
            <summary>
            URI of deployment server.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.CustomerCenterUrl">
            <summary>
            SortedList of URLs for the CustomerCenter site - keyed on product ID.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.LearningCenterUrl">
            <summary>
            URL for the Learning Center site
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.HelpServer">
            <summary>
            Override URL for a server that will host the help files.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.OnLineSupportUrl">
            <summary>
            SortedList of URLs for the Online Support site - keyed on product ID.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.TechUpdateUrl">
            <summary>
            SortedList of URLs for the Tech Update site - keyed on product ID.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.IsTechSupportRunning">
            <summary>
            Is the UI being run in support mode? If so, certain things will be skipped. For example, the UI version
            checking will not be done.
            </summary>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.IsCrystalRptRunning">
            <summary>
            Gets whether the user runs Vantage with /rpt switch.
            </summary>
            <value><b>true</b> if the the user runs Vantage with /rpt switch.</value>
        </member>
        <member name="M:Ice.Lib.AppSettingsHandler.CheckThatDefaultsHaveBeenRead">
            <summary>
            Checks the that defaults have been read.
            </summary>
        </member>
        <member name="M:Ice.Lib.AppSettingsHandler.DetermineAppSettings(System.Xml.XmlDocument)">
            <summary>
            Reads the that appSettings node and parses its child nodes.
            </summary>
            <param name="configDoc">config document.</param>
        </member>
        <member name="M:Ice.Lib.AppSettingsHandler.CheckPathForTokens(System.String)">
            <summary>
            Searches a path for an occurrence of predefined environment variables and substitutes
            the actual value for the variable.
            </summary>
            <param name="path">Path to parse.</param>
            <returns>Modified path.</returns>
        </member>
        <member name="M:Ice.Lib.AppSettingsHandler.GetAppSettingsSettingStringValue(System.String)">
            <summary>
            Gets the application settings setting string value.  This method will first check to see if the
            setting exists in the user settings section and will return that value if it is found.
            </summary>
            <param name="settingName">Name of the setting.</param>
            <returns></returns>
        </member>
        <member name="M:Ice.Lib.AppSettingsHandler.ContainsKey(System.String)">
            <summary>
            Determines whether the Key exists on either the AppSettings or UserSettings nodes.
            </summary>
            <param name="key">key of the node - case sensitive.</param>
            <returns>true if the Key exists on either the AppSettings or UserSettings nodes</returns>
        </member>
        <member name="M:Ice.Lib.AppSettingsHandler.GetString(System.String,System.String)">
            <summary>
            Returns the value of a child node in the appSettings or userSettings node.
            userSettings will be checked first and then appSettings.
            </summary>
            <param name="key">key of the node - case sensitive.</param>
            <param name="defaultValue">default value if node does not exist.</param>
            <returns>The value</returns>
        </member>
        <member name="M:Ice.Lib.AppSettingsHandler.GetString(Ice.Lib.AppSettingsSections,System.String,System.String)">
            <summary>
            Returns the value of child node in a named section.
            </summary>
            <param name="section">Configuration section.</param>
            <param name="key">Key of the child node.</param>
            <param name="defaultValue">Value to use if node does not exist.</param>
            <returns></returns>
        </member>
        <member name="M:Ice.Lib.AppSettingsHandler.GetBoolean(Ice.Lib.AppSettingsSections,System.String)">
            <summary>
            If the setting is missing or it cannot be parsed, it returns a null.
            </summary>
            <param name="section">the AppSettingsSection.</param>
            <param name="key">the key or node name in the XML file.</param>
            <returns>the setting value or null if not found or it couldnt be parsed as a boolean.</returns>
        </member>
        <member name="M:Ice.Lib.AppSettingsHandler.SetValue(System.String,System.String)">
            <summary>
            Sets the node/value pair in the appSettings node of the configuration file.
            </summary>
            <param name="key">Node to update.</param>
            <param name="val">Value to update.</param>
        </member>
        <member name="M:Ice.Lib.AppSettingsHandler.IsExportEnabledForForm(System.String,System.String)">
            <summary>
            Determines if a given form can be exported for W2W.
            </summary>
            <param name="formName"></param>
            <param name="assemblyName">Name of assembly containing the form.</param>
            <returns>True if the form is enabled for export, otherwise False.</returns>
        </member>
        <member name="P:Ice.Lib.AppSettingsHandler.ServerTraceFlags">
            <summary>
            Read optional list of trace flags, which are sent to server when  Include Server trace is specified in Tracing Options.
            </summary>
        </member>
        <member name="T:Ice.Lib.AppSettingsSections">
            <summary>
            The different sections of the application settings.
            </summary>
        </member>
        <member name="F:Ice.Lib.AppSettingsSections.User">
            <summary>The user section.</summary>
        </member>
        <member name="F:Ice.Lib.AppSettingsSections.Application">
            <summary>The application section.</summary>
        </member>
        <member name="F:Ice.Lib.AppSettingsSections.Tools">
            <summary>The tools section.</summary>
        </member>
        <member name="F:Ice.Lib.AppSettingsSections.Help">
            <summary>The help section.</summary>
        </member>
        <member name="F:Ice.Lib.AppSettingsSections.Sort">
            <summary>The sort section.</summary>
        </member>
        <member name="T:Ice.Lib.EnvironmentInformation">
            <summary>
            Holds environment information.
            </summary>
            <remarks>
            This class was added to make unit testing easier. The specific issue was that <see cref="T:Ice.Lib.AppSettingsHandler"/>
            has a static constructor that would through an exception because it couldn't find the configuration file.
            When you are using the MSTest unit testing framework, you can't specify the command line and therefore
            the <see cref="T:Ice.Lib.AppSettingsHandler"/> assumes one of the parameters that MSTest uses is the configuration
            file name and causes an exception.
            </remarks>
        </member>
        <member name="P:Ice.Lib.EnvironmentInformation.ConfigurationFileName">
            <summary>
            Gets or sets the name of the configuration file.
            </summary>
            <value>The name of the configuration file.</value>
            <remarks>
            The <see cref="M:Ice.Lib.AppSettingsHandler.SetConfigPath"/> method forces a specific path for the configuration file
            no matter how you specify it on the command line. This property allows you to set it before the
            <see cref="T:Ice.Lib.AppSettingsHandler"/> has initialized it's static data. This value will be ignored after the
            classes static data has been initialized.
            </remarks>
        </member>
        <member name="M:Ice.Lib.EnvironmentInformation.GetCommandLineArgs">
            <summary>
            Gets the command line arguments.
            </summary>
            <returns>The command line arguments.</returns>
            <remarks>
            If this hasn't been set already with the <see cref="M:Ice.Lib.EnvironmentInformation.SetCommandLineArgs(System.String[])"/> method, then the
            <see cref="M:System.Environment.GetCommandLineArgs"/> is used to get the value.
            </remarks>
        </member>
        <member name="M:Ice.Lib.EnvironmentInformation.SetCommandLineArgs(System.String[])">
            <summary>
            Sets the command line arguments.
            </summary>
            <param name="arguments">The arguments.</param>
            <remarks>
            Since many things rely on these values, you can only set before it is actually used. Once the value is set
            it cannot be changed.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown if the command line arguments have already been set.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if the <paramref name="arguments"/> parameter is <c>null</c>.</exception>
        </member>
    </members>
</doc>
